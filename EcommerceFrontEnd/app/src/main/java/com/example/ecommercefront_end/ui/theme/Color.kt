package com.example.ecommercefront_end.ui.theme

import androidx.compose.ui.graphics.Color

//  Tema Terracotta e Crema

// Colori chiari
val TCprimaryLight = Color(0xFF1DB954) // Verde Spotify
val TConPrimaryLight = Color(0xFFFFFFFF) // Biancoval
val TCprimaryContainerLight = Color(0xFFCCE6B4) // Verde chiaro
val TConPrimaryContainerLight = Color(0xFF333333) // Grigio scuro
val TCsecondaryLight = Color(0xFFE30613) // Rosso Feltrinelli
val TConSecondaryLight = Color(0xFFFFFFFF) // Bianco
val TCsecondaryContainerLight = Color(0xFFF2F2F2) // Grigio chiarissimo
val TConSecondaryContainerLight = Color(0xFF333333) // Grigio scuro
val TCtertiaryLight = Color(0xFF66B244) // Verde chiaro
val TConTertiaryLight = Color(0xFFFFFFFF) // Bianco
val TCtertiaryContainerLight = Color(0xFFF2F2F2) // Grigio chiarissimo
val TConTertiaryContainerLight = Color(0xFF333333) // Grigio scuro
val TCerrorLight = Color(0xFFCC0000) // Rosso scuro
val TConErrorLight = Color(0xFFFFFFFF) // Bianco
val TCerrorContainerLight = Color(0xFFF2F2F2) // Grigio chiarissimo
val TConErrorContainerLight = Color(0xFFCC0000) // Rosso scuro
val TCbackgroundLight = Color(0xFFFFFFFF) // Bianco
val TConBackgroundLight = Color(0xFF333333) // Grigio scuro
val TCsurfaceLight = Color(0xFFFFFFFF) // Bianco
val TConSurfaceLight = Color(0xFF333333) // Grigio scuro
val TCsurfaceVariantLight = Color(0xFFF2F2F2) // Grigio chiarissimo
val TConSurfaceVariantLight = Color(0xFF666666) // Grigio medio
val TCoutlineLight = Color(0xFF666666) //Grigio medio
val TCoutlineVariantLight = Color(0xFFF2F2F2) // Grigio chiarissimo
val TCscrimLight = Color(0xFF000000) // Nero
val TCinverseSurfaceLight = Color(0xFF333333) // Grigio scuro
val TCinverseOnSurfaceLight = Color(0xFFFFFFFF) // Bianco
val TCinversePrimaryLight = Color(0xFF66B244) // Verde chiaro
val TCsurfaceDimLight = Color(0xFFF2F2F2) // Grigio chiarissimo
val TCsurfaceBrightLight = Color(0xFFFFFFFF) // Bianco
val TCsurfaceContainerLowestLight = Color(0xFFFFFFFF) // Bianco
val TCsurfaceContainerLowLight = Color(0xFFF2F2F2) // Grigio chiarissimo
val TCsurfaceContainerLight = Color(0xFFF2F2F2) // Grigio chiarissimo
val TCsurfaceContainerHighLight = Color(0xFFF2F2F2) // Grigio chiarissimo
val TCsurfaceContainerHighestLight = Color(0xFFF2F2F2) // Grigio chiarissimo

// Colori scuri (adatta questi in base alle tue preferenze per la modalità scura)
val TCprimaryDark = Color(0xFF1DB954) // Verde Spotify (può rimanere lo stesso)
val TConPrimaryDark = Color(0xFF000000) // Nero
val TCprimaryContainerDark = Color(0xFF009639) // Verde Feltrinelli
val TConPrimaryContainerDark = Color(0xFFFFFFFF) // Bianco
val TCsecondaryDark = Color(0xFFCC0000) // Rosso scuro
val TConSecondaryDark = Color(0xFF000000) // Nero
val TCsecondaryContainerDark = Color(0xFF333333) // Grigio scuro
val TConSecondaryContainerDark = Color(0xFFFFFFFF) // Bianco


// FINE TEMA TERRACOTTA CREMA
val primaryLight = Color(0xFF904A41)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFFFFDAD5)
val onPrimaryContainerLight = Color(0xFF3B0905)
val secondaryLight = Color(0xFF775651)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFFFFDAD5)
val onSecondaryContainerLight = Color(0xFF2C1512)
val tertiaryLight = Color(0xFF705C2E)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFFFCDFA6)
val onTertiaryContainerLight = Color(0xFF251A00)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF410002)
val backgroundLight = Color(0xFFFFF8F6)
val onBackgroundLight = Color(0xFF231918)
val surfaceLight = Color(0xFFFFF8F6)
val onSurfaceLight = Color(0xFF231918)
val surfaceVariantLight = Color(0xFFF5DDDA)
val onSurfaceVariantLight = Color(0xFF534341)
val outlineLight = Color(0xFF857370)
val outlineVariantLight = Color(0xFFD8C2BE)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF392E2C)
val inverseOnSurfaceLight = Color(0xFFFFEDEA)
val inversePrimaryLight = Color(0xFFFFB4A8)
val surfaceDimLight = Color(0xFFE8D6D3)
val surfaceBrightLight = Color(0xFFFFF8F6)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFFFF0EE)
val surfaceContainerLight = Color(0xFFFCEAE7)
val surfaceContainerHighLight = Color(0xFFF7E4E1)
val surfaceContainerHighestLight = Color(0xFFF1DEDC)

val primaryLightMediumContrast = Color(0xFF6E3027)
val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(0xFFAA6055)
val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val secondaryLightMediumContrast = Color(0xFF593B37)
val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerLightMediumContrast = Color(0xFF8F6C67)
val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryLightMediumContrast = Color(0xFF524015)
val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(0xFF887242)
val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val errorLightMediumContrast = Color(0xFF8C0009)
val onErrorLightMediumContrast = Color(0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(0xFFDA342E)
val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
val backgroundLightMediumContrast = Color(0xFFFFF8F6)
val onBackgroundLightMediumContrast = Color(0xFF231918)
val surfaceLightMediumContrast = Color(0xFFFFF8F6)
val onSurfaceLightMediumContrast = Color(0xFF231918)
val surfaceVariantLightMediumContrast = Color(0xFFF5DDDA)
val onSurfaceVariantLightMediumContrast = Color(0xFF4F3F3D)
val outlineLightMediumContrast = Color(0xFF6C5B59)
val outlineVariantLightMediumContrast = Color(0xFF897674)
val scrimLightMediumContrast = Color(0xFF000000)
val inverseSurfaceLightMediumContrast = Color(0xFF392E2C)
val inverseOnSurfaceLightMediumContrast = Color(0xFFFFEDEA)
val inversePrimaryLightMediumContrast = Color(0xFFFFB4A8)
val surfaceDimLightMediumContrast = Color(0xFFE8D6D3)
val surfaceBrightLightMediumContrast = Color(0xFFFFF8F6)
val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(0xFFFFF0EE)
val surfaceContainerLightMediumContrast = Color(0xFFFCEAE7)
val surfaceContainerHighLightMediumContrast = Color(0xFFF7E4E1)
val surfaceContainerHighestLightMediumContrast = Color(0xFFF1DEDC)

val primaryLightHighContrast = Color(0xFF44100A)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF6E3027)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF341C18)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF593B37)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF2D2000)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF524015)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF4E0002)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF8C0009)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFFFF8F6)
val onBackgroundLightHighContrast = Color(0xFF231918)
val surfaceLightHighContrast = Color(0xFFFFF8F6)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFF5DDDA)
val onSurfaceVariantLightHighContrast = Color(0xFF2E211F)
val outlineLightHighContrast = Color(0xFF4F3F3D)
val outlineVariantLightHighContrast = Color(0xFF4F3F3D)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF392E2C)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFFFE7E3)
val surfaceDimLightHighContrast = Color(0xFFE8D6D3)
val surfaceBrightLightHighContrast = Color(0xFFFFF8F6)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFFFF0EE)
val surfaceContainerLightHighContrast = Color(0xFFFCEAE7)
val surfaceContainerHighLightHighContrast = Color(0xFFF7E4E1)
val surfaceContainerHighestLightHighContrast = Color(0xFFF1DEDC)

val primaryDark = Color(0xFFFFB4A8)
val onPrimaryDark = Color(0xFF561E17)
val primaryContainerDark = Color(0xFF73342B)
val onPrimaryContainerDark = Color(0xFFFFDAD5)
val secondaryDark = Color(0xFFE7BDB6)
val onSecondaryDark = Color(0xFF442925)
val secondaryContainerDark = Color(0xFF5D3F3B)
val onSecondaryContainerDark = Color(0xFFFFDAD5)
val tertiaryDark = Color(0xFFDEC38C)
val onTertiaryDark = Color(0xFF3E2E04)
val tertiaryContainerDark = Color(0xFF564419)
val onTertiaryContainerDark = Color(0xFFFCDFA6)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF1A1110)
val onBackgroundDark = Color(0xFFF1DEDC)
val surfaceDark = Color(0xFF1A1110)
val onSurfaceDark = Color(0xFFF1DEDC)
val surfaceVariantDark = Color(0xFF534341)
val onSurfaceVariantDark = Color(0xFFD8C2BE)
val outlineDark = Color(0xFFA08C89)
val outlineVariantDark = Color(0xFF534341)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFF1DEDC)
val inverseOnSurfaceDark = Color(0xFF392E2C)
val inversePrimaryDark = Color(0xFF904A41)
val surfaceDimDark = Color(0xFF1A1110)
val surfaceBrightDark = Color(0xFF423735)
val surfaceContainerLowestDark = Color(0xFF140C0B)
val surfaceContainerLowDark = Color(0xFF231918)
val surfaceContainerDark = Color(0xFF271D1C)
val surfaceContainerHighDark = Color(0xFF322826)
val surfaceContainerHighestDark = Color(0xFF3D3231)

val primaryDarkMediumContrast = Color(0xFFFFBAAF)
val onPrimaryDarkMediumContrast = Color(0xFF330503)
val primaryContainerDarkMediumContrast = Color(0xFFCC7B6F)
val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
val secondaryDarkMediumContrast = Color(0xFFECC1BA)
val onSecondaryDarkMediumContrast = Color(0xFF26100D)
val secondaryContainerDarkMediumContrast = Color(0xFFAE8882)
val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
val tertiaryDarkMediumContrast = Color(0xFFE3C890)
val onTertiaryDarkMediumContrast = Color(0xFF1F1500)
val tertiaryContainerDarkMediumContrast = Color(0xFFA68E5B)
val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
val errorDarkMediumContrast = Color(0xFFFFBAB1)
val onErrorDarkMediumContrast = Color(0xFF370001)
val errorContainerDarkMediumContrast = Color(0xFFFF5449)
val onErrorContainerDarkMediumContrast = Color(0xFF000000)
val backgroundDarkMediumContrast = Color(0xFF1A1110)
val onBackgroundDarkMediumContrast = Color(0xFFF1DEDC)
val surfaceDarkMediumContrast = Color(0xFF1A1110)
val onSurfaceDarkMediumContrast = Color(0xFFFFF9F8)
val surfaceVariantDarkMediumContrast = Color(0xFF534341)
val onSurfaceVariantDarkMediumContrast = Color(0xFFDCC6C2)
val outlineDarkMediumContrast = Color(0xFFB39E9B)
val outlineVariantDarkMediumContrast = Color(0xFF927F7C)
val scrimDarkMediumContrast = Color(0xFF000000)
val inverseSurfaceDarkMediumContrast = Color(0xFFF1DEDC)
val inverseOnSurfaceDarkMediumContrast = Color(0xFF322826)
val inversePrimaryDarkMediumContrast = Color(0xFF74352C)
val surfaceDimDarkMediumContrast = Color(0xFF1A1110)
val surfaceBrightDarkMediumContrast = Color(0xFF423735)
val surfaceContainerLowestDarkMediumContrast = Color(0xFF140C0B)
val surfaceContainerLowDarkMediumContrast = Color(0xFF231918)
val surfaceContainerDarkMediumContrast = Color(0xFF271D1C)
val surfaceContainerHighDarkMediumContrast = Color(0xFF322826)
val surfaceContainerHighestDarkMediumContrast = Color(0xFF3D3231)

val primaryDarkHighContrast = Color(0xFFFFF9F8)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFFFFBAAF)
val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
val secondaryDarkHighContrast = Color(0xFFFFF9F8)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFFECC1BA)
val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
val tertiaryDarkHighContrast = Color(0xFFFFFAF7)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFE3C890)
val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
val errorDarkHighContrast = Color(0xFFFFF9F9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFBAB1)
val onErrorContainerDarkHighContrast = Color(0xFF000000)
val backgroundDarkHighContrast = Color(0xFF1A1110)
val onBackgroundDarkHighContrast = Color(0xFFF1DEDC)
val surfaceDarkHighContrast = Color(0xFF1A1110)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF534341)
val onSurfaceVariantDarkHighContrast = Color(0xFFFFF9F8)
val outlineDarkHighContrast = Color(0xFFDCC6C2)
val outlineVariantDarkHighContrast = Color(0xFFDCC6C2)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFF1DEDC)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF4E1811)
val surfaceDimDarkHighContrast = Color(0xFF1A1110)
val surfaceBrightDarkHighContrast = Color(0xFF423735)
val surfaceContainerLowestDarkHighContrast = Color(0xFF140C0B)
val surfaceContainerLowDarkHighContrast = Color(0xFF231918)
val surfaceContainerDarkHighContrast = Color(0xFF271D1C)
val surfaceContainerHighDarkHighContrast = Color(0xFF322826)
val surfaceContainerHighestDarkHighContrast = Color(0xFF3D3231)







